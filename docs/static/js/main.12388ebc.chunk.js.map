{"version":3,"sources":["utils/spotify.js","components/Login.js","services/httpService.js","components/UserProfile.js","components/Landing.js","utils/spotifyUrls.js","utils/useFulFunctions.js","contexts/QuestionContext.js","components/Answer.js","components/Answers.js","components/CorrectAnswer.js","components/ButtonNextQuestion.js","components/Question.js","components/Player.js","components/Progress.js","components/Listening.js","components/Game.js","components/App.js","index.js"],"names":["loginUrl","process","join","Login","className","src","alt","href","http","axios","create","baseURL","ChangeToken","token","defaults","headers","common","Authorization","UserProfile","user","Avatar","display_name","images","url","Landing","to","getRandomNumber","min","max","Math","floor","random","QuestionContext","createContext","ProviderQuestion","props","history","useHistory","children","console","log","userPlayLists","endPoints","playerRef","useRef","useState","tracks","setTracks","answers","setAnswers","isValidated","setIsValidated","question","setQuestion","id","preview_url","randomTrack","setRandomTrack","useEffect","getTracks","a","get","playLists","data","items","Promise","all","map","playList","playListId","playListsTracksResponse","_tracks","reduce","totalTracks","trackResponse","playListTrackList","track","filter","getRandomAnswers","randomNumbers","length","randomNumber","includes","push","getRandomNumbers","_answers","number","isCorrect","setIsCorrect","pauseTrack","setTimeout","current","pause","Provider","value","handleValidate","e","handleNextQuestion","getQuestion","resetQuestions","trackDuration","Answer","order","answer","useContext","name","artist","artists","correctId","data-id","onClick","Answers","key","CorrectAnswer","correctedText","ButtonNextQuestion","Question","Player","controls","ref","autoPlay","type","Progress","setValue","intervalDuration","updateValue","oldValue","interval","setInterval","clearInterval","LinearProgress","variant","Listening","Game","setUser","getUser","_user","path","component","exact","App","setToken","getToken","window","location","hash","substring","split","initial","item","parts","decodeURIComponent","_token","access_token","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12388ebc.chunk.js","sourcesContent":["export const authEndpoint = 'https://accounts.spotify.com/authorize';\r\nexport const spotifyLogoUrl =\r\n  'https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg';\r\n\r\nconst redirectUri = process.env.REACT_APP_REDIRECT_URL;\r\n\r\nconst clientId = process.env.REACT_APP_CLIENT_ID;\r\n\r\nconst scopes = [\r\n  'user-read-currently-playing',\r\n  'user-read-recently-played',\r\n  'user-read-playback-state',\r\n  'user-top-read',\r\n  'user-modify-playback-state',\r\n  'playlist-read-private'\r\n];\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  '%20'\r\n)}&response_type=token&show_dialog=true`;\r\n\r\nexport const getTokenFromResponse = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce((initial, item) => {\r\n      const parts = item.split('=');\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n      return initial;\r\n    }, {});\r\n};\r\n","import React from 'react';\r\nimport '../stylesheets/login.scss';\r\nimport '../stylesheets/buttons.scss';\r\nimport { loginUrl, spotifyLogoUrl } from '../utils/spotify';\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div className='login'>\r\n      <img src={spotifyLogoUrl} alt='spotify-logo' />\r\n      <a className='button--primary' href={loginUrl}>\r\n        login with spotify\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import axios from 'axios';\r\n\r\nexport const http = axios.create({\r\n  baseURL: 'https://api.spotify.com/v1/'\r\n});\r\n\r\nhttp.ChangeToken = token =>\r\n  (http.defaults.headers.common.Authorization = `Bearer ${token}`);\r\n","import React from 'react';\r\nimport { Avatar } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport '../stylesheets/user.scss';\r\n\r\nconst UserProfile = ({ user }) => {\r\n  return (\r\n    <div className='user'>\r\n      <Avatar\r\n        alt={user?.display_name}\r\n        src={user?.images[0]?.url}\r\n        className='user__avatar'\r\n      />\r\n      <span className='user__name'>{user?.display_name}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserProfile.propTypes = {\r\n  user: PropTypes.object\r\n};\r\n\r\nexport default UserProfile;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../stylesheets/buttons.scss';\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div className='landing'>\r\n      <Link className='button--primary' to='/listening'>\r\n        Play\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","const currentUserProfileEndPoint = '/me';\r\nconst userPlayLists = '/me/playlists';\r\nexport const tracksFromPlayList = playListId =>\r\n  `/playlists/${playListId}/tracks`;\r\n\r\nexport default {\r\n  currentUserProfileEndPoint,\r\n  userPlayLists\r\n};\r\n","/**\r\n * getRandomNumber genera un número aleatorio entre dos números dados min y max\r\n * @param {* number} min incluído\r\n * @param {* number} max excluido\r\n * @example getRandomNumber(1,4) puede ser 1, 2 o 3\r\n * @returns number\r\n */\r\nexport const getRandomNumber = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n};\r\n\r\n/**\r\n * getRandomNumbers genera un array de números aleatorios entre 0 y el max. Tantos números con length\r\n * @param {* number} length longitud del array que se devuelve\r\n * @param {* number } max número máximo .Los números aleatorios serán menores que max\r\n * @example getRandomNumbers(4, 6) [1, 5, 4, 0]\r\n */\r\nexport const getRandomNumbers = (length, max) => {\r\n  const randomNumbers = [];\r\n  while (randomNumbers.length < length) {\r\n    const randomNumber = getRandomNumber(0, max - 1);\r\n    if (!randomNumbers.includes(randomNumbers)) {\r\n      randomNumbers.push(randomNumber);\r\n    }\r\n  }\r\n  return randomNumbers;\r\n};\r\n","import React, { useState, createContext, useEffect, useRef } from 'react';\r\nimport { http } from '../services/httpService';\r\nimport endPoints, { tracksFromPlayList } from '../utils/spotifyUrls';\r\nimport { getRandomNumber, getRandomNumbers } from '../utils/useFulFunctions';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const QuestionContext = createContext();\r\n\r\nexport const ProviderQuestion = props => {\r\n  const history = useHistory();\r\n  // eslint-disable-next-line react/prop-types\r\n  const { children } = props;\r\n  console.log({ history });\r\n  const { userPlayLists } = endPoints;\r\n  const playerRef = useRef();\r\n  const numberAnswers = 4;\r\n  const trackDuration = 5000;\r\n  const [tracks, setTracks] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [isValidated, setIsValidated] = useState(false);\r\n  const [question, setQuestion] = useState(1);\r\n\r\n  const [randomTrack, setRandomTrack] = useState({\r\n    id: null,\r\n    preview_url: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    getTracks();\r\n  }, []);\r\n\r\n  const getQuestion = () => {\r\n    getRandomAnswers();\r\n    pauseTrack();\r\n  };\r\n\r\n  const getTracks = async () => {\r\n    const {\r\n      data: { items: playLists }\r\n    } = await http.get(userPlayLists);\r\n\r\n    const playListsTracksResponse = await Promise.all(\r\n      playLists.map(async playList => http.get(tracksFromPlayList(playList.id)))\r\n    );\r\n\r\n    const _tracks = playListsTracksResponse.reduce(\r\n      (totalTracks, trackResponse) => {\r\n        const playListTrackList = trackResponse.data.items\r\n          .map(({ track }) => track)\r\n          .filter(track => track.preview_url);\r\n        totalTracks = [...totalTracks, ...playListTrackList];\r\n        return totalTracks;\r\n      },\r\n      []\r\n    );\r\n    setTracks(_tracks);\r\n  };\r\n\r\n  const getRandomAnswers = () => {\r\n    const randomNumbers = getRandomNumbers(numberAnswers, tracks.length);\r\n    const _answers = randomNumbers.map(number => tracks[number]);\r\n    const randomNumber = getRandomNumber(0, 4);\r\n    setRandomTrack(tracks[randomNumbers[randomNumber]]);\r\n    setAnswers(_answers);\r\n  };\r\n  const [isCorrect, setIsCorrect] = useState(isValidated);\r\n  const handleValidate = e => {\r\n    setIsValidated(true);\r\n  };\r\n  const pauseTrack = () => {\r\n    setTimeout(() => {\r\n      playerRef.current.pause();\r\n      history.push('/play');\r\n    }, trackDuration);\r\n  };\r\n  const handleNextQuestion = () => {\r\n    setQuestion(question + 1);\r\n  };\r\n\r\n  const resetQuestions = () => {\r\n    setIsValidated(false);\r\n    setIsCorrect(false);\r\n  };\r\n\r\n  return (\r\n    <QuestionContext.Provider\r\n      value={{\r\n        tracks,\r\n        randomTrack,\r\n        playerRef,\r\n        answers,\r\n        isValidated,\r\n        handleValidate,\r\n        setIsCorrect,\r\n        isCorrect,\r\n        handleNextQuestion,\r\n        getQuestion,\r\n        resetQuestions,\r\n        trackDuration\r\n      }}\r\n    >\r\n      {children}\r\n    </QuestionContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { QuestionContext } from '../contexts/QuestionContext';\r\n\r\nconst Answer = ({ order, answer }) => {\r\n  const { randomTrack, handleValidate, isValidated, setIsCorrect } = useContext(\r\n    QuestionContext\r\n  );\r\n  const name = answer?.name;\r\n  const artist = answer?.artists.map(artist => artist.name).join(' & ');\r\n  const id = answer?.id;\r\n  const correctId = randomTrack?.id;\r\n\r\n  const handleCorrect = e => {\r\n    handleValidate();\r\n    setIsCorrect(correctId === id);\r\n  };\r\n\r\n  const correct = () => {\r\n    if (isValidated) {\r\n      if (correctId === id) {\r\n        return 'right';\r\n      } else {\r\n        return 'wrong';\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className={`answer--${order} ${correct()}`}\r\n      data-id={id}\r\n      onClick={handleCorrect}\r\n    >\r\n      <span className='answer__text'>{artist}</span>\r\n      <span className='answer__text'>{name}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nAnswer.propTypes = {\r\n  answer: PropTypes.object,\r\n  order: PropTypes.number,\r\n  randomTrack: PropTypes.object\r\n};\r\nexport default Answer;\r\n","import React, { useContext } from 'react';\r\nimport Answer from './Answer';\r\nimport '../stylesheets/answers.scss';\r\nimport { QuestionContext } from '../contexts/QuestionContext';\r\n\r\nconst Answers = () => {\r\n  const { answers } = useContext(QuestionContext);\r\n  console.log({ answers });\r\n  return (\r\n    <div className='answers'>\r\n      {answers.map((answer, key) => (\r\n        <Answer key={key} order={key + 1} answer={answer} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Answers;\r\n","import React, { useContext } from 'react';\r\nimport { QuestionContext } from '../contexts/QuestionContext';\r\n\r\nconst CorrectAnswer = () => {\r\n  const { isValidated, isCorrect } = useContext(QuestionContext);\r\n  const correctedText = isValidated ? (isCorrect ? 'correct' : 'wrong') : '';\r\n  return <div>{correctedText}</div>;\r\n};\r\n\r\nexport default CorrectAnswer;\r\n","import React, { useContext } from 'react';\r\nimport { QuestionContext } from '../contexts/QuestionContext';\r\nimport { Link } from 'react-router-dom';\r\nimport '../stylesheets/buttons.scss';\r\n\r\nconst ButtonNextQuestion = () => {\r\n  const { isValidated, handleNextQuestion } = useContext(QuestionContext);\r\n  return (\r\n    <>\r\n      {isValidated && (\r\n        <Link\r\n          to='/listening'\r\n          className='button--secondary'\r\n          onClick={handleNextQuestion}\r\n        >\r\n          Next\r\n        </Link>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonNextQuestion;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport Answers from './Answers';\r\nimport CorrectAnswer from './CorrectAnswer';\r\nimport ButtonNextQuestion from './ButtonNextQuestion';\r\nimport { QuestionContext } from '../contexts/QuestionContext';\r\n\r\nconst Question = () => {\r\n  const { resetQuestions } = useContext(QuestionContext);\r\n  useEffect(() => {\r\n    return () => resetQuestions();\r\n  }, []);\r\n  return (\r\n    <div className='question'>\r\n      <Answers />\r\n      <CorrectAnswer />\r\n      <ButtonNextQuestion />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React, { useContext } from 'react';\r\nimport '../stylesheets/player.scss';\r\nimport { QuestionContext } from '../contexts/QuestionContext';\r\n\r\nconst Player = () => {\r\n  const { randomTrack, playerRef } = useContext(QuestionContext);\r\n  return (\r\n    <>\r\n      {randomTrack && (\r\n        <audio controls ref={playerRef} autoPlay className='player'>\r\n          <source src={randomTrack?.preview_url} type='audio/mpeg' />\r\n        </audio>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { LinearProgress } from '@material-ui/core';\r\nimport { QuestionContext } from '../contexts/QuestionContext';\r\n\r\nconst Progress = () => {\r\n  const { trackDuration } = useContext(QuestionContext);\r\n  const [value, setValue] = useState(0);\r\n  const intervalDuration = trackDuration / 100;\r\n  const updateValue = () => {\r\n    setValue(oldValue => oldValue + 1);\r\n  };\r\n  useEffect(() => {\r\n    const interval = setInterval(updateValue, intervalDuration);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  return <LinearProgress variant='determinate' value={value} />;\r\n};\r\n\r\nexport default Progress;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { QuestionContext } from '../contexts/QuestionContext';\r\nimport Player from './Player';\r\nimport Progress from './Progress';\r\n\r\nconst Listening = () => {\r\n  const { getQuestion } = useContext(QuestionContext);\r\n  useEffect(getQuestion, []);\r\n  return (\r\n    <div className='listening'>\r\n      <Progress />\r\n      <Player />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Listening;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { http } from '../services/httpService';\r\nimport UserProfile from './UserProfile';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport Landing from './Landing';\r\nimport Question from './Question';\r\nimport Listening from './Listening';\r\nimport { ProviderQuestion } from '../contexts/QuestionContext';\r\n\r\nconst Game = () => {\r\n  const [user, setUser] = useState(null);\r\n  const getUser = async () => {\r\n    const { data: _user } = await http.get('/me');\r\n    setUser(_user);\r\n  };\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <header className='header'>\r\n        <UserProfile user={user} />\r\n      </header>\r\n      <main className='main'>\r\n        <HashRouter>\r\n          <ProviderQuestion>\r\n            <Route path='/listening' component={Listening} />\r\n            <Route path='/play' component={Question} />\r\n            <Route exact path='/' component={Landing} />\r\n          </ProviderQuestion>\r\n        </HashRouter>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useEffect, useState } from 'react';\r\nimport '../stylesheets/app.scss';\r\nimport Login from './Login';\r\nimport { getTokenFromResponse } from '../utils/spotify';\r\nimport Game from './Game';\r\nimport { http } from '../services/httpService';\r\n\r\nconst App = () => {\r\n  const [token, setToken] = useState(null);\r\n\r\n  const getToken = async () => {\r\n    const { access_token: _token } = getTokenFromResponse();\r\n    window.location.hash = '';\r\n    if (_token) {\r\n      setToken(_token);\r\n      http.ChangeToken(_token);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getToken();\r\n  }, []);\r\n\r\n  return <div className='app'>{token ? <Game /> : <Login />}</div>;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}